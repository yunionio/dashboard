{
  "compute.vminstance-container": "Container host",
  "compute.pod-image": "mirror",
  "compute.eci.container_group_config": "Container group configuration",
  "compute.eci.container_config": "Container Configuration",
  "compute.eci.repo.image.registry": "Mirror warehouse",
  "compute.container": "Container{0}",
  "compute.add_container": "Add container",
  "compute.repo.image.source": "Image source",
  "compute.repo.image.custom": "Custom URL",
  "compute.repo.image.registry": "Mirror warehouse",
  "compute.repo.container_image": "Container Image",
  "compute.repo.cpu_cores": "CPU cores",
  "compute.repo.cpu_cores.unit": "core",
  "compute.repo.memory": "memory",
  "compute.repo.command": "Container command",
  "compute.repo.command.placeholder": "Container command, optional",
  "compute.repo.command.params": "Command parameters",
  "compute.repo.command.params.placeholder": "Command parameters, optional",
  "compute.repo.data_volume": "data volume",
  "compute.repo.mount_point": "mount point",
  "compute.repo.storage_volume": "Storage Volume",
  "compute.repo.mount_point.example": "For example:/mnt",
  "compute.repo.env_variables": "Environment variables",
  "compute.repo.variables": "Variables",
  "compute.repo.privileged_mode": "Run in privileged mode",
  "compute.repo.storage_statement": "Storage",
  "compute.repo.image.tag": "Image version",
  "compute.repo.add": "Add {0}",
  "compute.repo.label": "label",
  "compute.repo.key": "key",
  "compute.repo.value": "value",
  "compute.repo.example": "Example: {0}",
  "compute.repo.port_mapping": "Port Mapping",
  "compute.repo.container_port": "Container port",
  "compute.repo.host_port": "Host port",
  "compute.repo.mount_point.check_content": "The mount point cannot be /",
  "compute.repo.mount_point.check_start": "Mount point starts with /",
  "compute.repo.start": "start",
  "compute.repo.stop": "stop",
  "compute.repo.helper.change_config": "Only the shutdown container host can adjust the configuration",
  "compute.repo.helper.modify": "Only exited containers can be modified",
  "compute.repo.terminal": "Terminal",
  "compute.repo.helper.terminal": "Only the running or probing {0} can enter the terminal",
  "compute.repo.helper.set_duration.alert": "After expiration, the container host of the corresponding platform will be deleted. There is a certain discrepancy between the actual release time and the set time. The specific release time shall prevail.",
  "compute.container.monitor.pod_mem_used": "Memory used",
  "compute.container.port_mapping.tooltip": "Currently, this operation is only supported when creating a container host",
  "compute.repo.helper.view_log": "Only the running or exited {0} can enter the terminal",
  "compute.container.monitor.pod_volume_used_total": "Data volume usage (usage, total amount)",
  "compute.container.monitor.used_total": "Usage,Total amount",
  "compute.container.monitor.pod_volume_used_percent": "Data volume utilization rate",
  "compute.container.monitor.pod_volume_inodes_used_percent": "Data volume inode utilization rate",
  "compute.container.monitor.pod_process_process_count": "Process count",
  "compute.container.monitor.pod_process_fd_count": "File handler count",
  "compute.container.monitor.pod_gpu_mem_util": "GPU Memory Utilization",
  "compute.container.monitor.pod_diskio_read_Bps": "Data volume read throughput",
  "compute.container.monitor.pod_diskio_write_Bps": "Data volume write throughput",
  "compute.container.monitor.pod_netio_bps_recv": "Accepting bytes per second",
  "compute.container.monitor.pod_netio_bps_sent": "Number of bytes sent per second",
  "compute.container.monitor.pod_netio_pps_recv": "Number of network packets received per second",
  "compute.container.monitor.pod_netio_pps_sent": "Number of network packets per second"
}
